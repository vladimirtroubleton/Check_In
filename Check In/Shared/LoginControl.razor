@page "/loginControl"
@using AuthDataLayer.Models
@using AuthDataLayer.ViewModels

@inject HttpClient Http
@inject NavigationManager UriHelper
@inject Check_In.Services.IAuthService authServ
<div class="container">
    <AuthorizeView>
        <Authorized Context=" Auth ">
            @Auth.User.Identity.Name
        </Authorized>
        <NotAuthorized Context=" NoAuth ">
            <p style=" @style">@logRes.Error</p>
            <div class="col-6">
                <div class="row">
                    <EditForm Model="@userLoginModel" OnValidSubmit="LogIn">
                        <DataAnnotationsValidator />
                        <ValidationSummary Model="@userLoginModel" />



                        <div class="form-group">
                            <label class="control-label">Введите логин</label>
                            <InputText @bind-Value="userLoginModel.Login" class="form-control" />
                            <ValidationMessage For="@(() => userLoginModel.Login)" />
                        </div>

                        <div style="" class="form-group">
                            <label class="control-label">Введите пароль</label>
                            <InputText @bind-Value="userLoginModel.Password" class="form-control" type="password" />
                            <ValidationMessage For="@(() => userLoginModel.Password)" />
                        </div>

                        <div class="form-group">
                            <button class="ml-md-auto btn btn-outline-success" type="submit">
                                Вход
                            </button>
                        </div>
                        <div class="form-group">

                            <a class="btn btn-outline-primary" href="/Account/Register">Регистрация</a>
                        </div>




                    </EditForm>

                </div>
              
            </div>
            
        </NotAuthorized>
    </AuthorizeView>
</div>
@code {
    LoginViewModel userLoginModel = new LoginViewModel();

    string style = "visibility:hidden ; color:red";

    AuthDataLayer.ResultModels.LoginResult logRes = new AuthDataLayer.ResultModels.LoginResult();

    private async Task LogIn()
    {
        logRes = await authServ.Login(userLoginModel);
        if (logRes.Successful)
        {
            UriHelper.NavigateTo("/");
        }
        style = "color:red";

    }

}
