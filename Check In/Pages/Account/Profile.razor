@page "/profile"
@using AuthDataLayer.Models
@inject Check_In.Services.IAuthService authServ
@inject AuthenticationStateProvider authProvider
@inject NavigationManager uriHelper
@inject Check_In.Services.users.UserService userServ
<AuthorizeView>
    <Authorized>



        @if (currentUser == null)
        {
            <h4>Загружаю ...</h4>
        }
        else
        {
            <div class="container">
                <div class="row">
                    <div class="col-sm-6 mx-auto ">
                        <div class="card  ">


                            <div class="card-body">
                                <p class="card-title text-center">
                                    Профиль пользователя:
                                </p>
                                <h4 class="card-title text-center">
                                    @currentUser.Login
                                </h4>

                                <p class="card-title text-center">
                                    Имя и фамилия:
                                </p>
                                <h4 class="card-title text-center">
                                    @currentUser.Name @currentUser.Surname
                                </h4>

                                <p class="card-title text-center">
                                    Возраст:
                                </p>
                                <h4 class="card-title text-center">
                                    @currentUser.Age
                                </h4>

                                <p class="card-title text-center">
                                    Почта пользователя:
                                </p>
                                <h4 class="card-title text-center">
                                    @currentUser.Email
                                </h4>
                                <button @onclick="LogOut" class="mx-auto btn btn-outline-danger">Выйти</button>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
        }


    </Authorized>
</AuthorizeView>

@code {
    private UserModel currentUser;

    private async Task LogOut()
    {
        await authServ.Logout();
        uriHelper.NavigateTo("/");
    }

    protected override async Task OnInitializedAsync()
    {
        var authState = await authProvider.GetAuthenticationStateAsync();
        currentUser = await userServ.GetCurrentUser(authState.User.Identity.Name);


    }
}