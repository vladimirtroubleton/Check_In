@page "/checkResponse/{Id:int}"
@using AuthDataLayer.Models
@using QuestionDataLayer.Models
@inject AuthenticationStateProvider authProvider
@inject NavigationManager uriHelper
@inject Check_In.Services.users.UserService userServ
@inject Check_In.Services.Question.QuestionService questServ
@inject Check_In.Services.IAuthService authServ

@if (responseQuestion!= null)
{
    <div class="row text-center">
        <div class="col-12 mx-auto">
            <div class="card">
                <div class="card-body">
                    <div class="card-title">Название опроса</div>
                    <div class="card-title"><h4>@responseQuestion.Name</h4></div>
                    <div class="card-title">Группа</div>
                    <div class="card-title">@responseQuestion.GroupName</div>
                    <div class="card-title">Вопросы:</div>
                    <div class="form-group" style="@questStyle">
                        <p class="counter">Вопрос : @responseQuestion.Question</p>
                        <label class="col-form-label">Ответ: @responseQuestion.QuestionResponse </label>
                    </div>
                    <div class="form-group" style="@questStyle1">
                        <p class="counter">Вопрос : @responseQuestion.Question1</p>
                        <label class="col-form-label">Ответ: @responseQuestion.Question1Response </label>

                    </div>
                    <div class="form-group" style="@questStyle2">
                        <p class="counter">Вопрос : @responseQuestion.Question2</p>
                        <label class="col-form-label">Ответ: @responseQuestion.Question2Response </label>
                    </div>
                    <div class="form-group" style="@questStyle3">
                        <p class="counter">Вопрос : @responseQuestion.Question3</p>
                        <label class="col-form-label">Ответ: @responseQuestion.Question3Response </label>
                    </div>
                    <div class="form-group" style="@questStyle4">
                        <p class="counter">Вопрос : @responseQuestion.Question4</p>
                        <label class="col-form-label">Ответ: @responseQuestion.Question4Response </label>
                    </div>
                    <a href="questionUser"class="btn btn-outline-warning">К опросам</a>
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Parameter]
    public int Id { get; set; }

    UserModel currentUser;

    QuestionResponseModel responseQuestion;

    protected override async Task OnInitializedAsync()
    {
        var authState = await authProvider.GetAuthenticationStateAsync();
        currentUser = await userServ.GetCurrentUser(authState.User.Identity.Name);
        if (currentUser == null)
        {
            await authServ.Logout();
            uriHelper.NavigateTo("/loginControl");
            return;
        }
        responseQuestion =await questServ.GetResponseById(Id, currentUser.Login);
        await FormedForm();

    }
     private Task FormedForm()
    {
        switch (responseQuestion.CountQest)
        {
            case 1:
                {
                    questStyle =  "display:block";
                    break;
                }
            case 2:
                {
                    questStyle = "";
                    questStyle1 = "";
                    break;
                }
            case 3:
                {
                    questStyle = "";
                    questStyle1 = "";
                    questStyle2 = "";
                    break;
                }
            case 4:
                {
                    questStyle = "";
                    questStyle1 = "";
                    questStyle2 = "";
                    questStyle3 = "";
                    break;
                }
            case 5:
                {
                    questStyle = "";
                    questStyle1 = "";
                    questStyle2 = "";
                    questStyle3 = "";
                    questStyle4 = "";
                    break;
                }
        }
        return Task.CompletedTask;
    }

    string questStyle = "display:none";
    string questStyle1= "display:none";
    string questStyle2= "display:none";
    string questStyle3= "display:none";
    string questStyle4= "display:none";
}
